buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.github.ksoichiro:gradle-console-reporter:0.6.3'
    }
}
plugins {
    id 'java'
    id "com.github.spotbugs" version "5.0.13"
    id 'pmd'
    id 'checkstyle'
    id 'maven-publish'
}

group = 'org.egeiper'
version = '1.1.2'
repositories {
    mavenCentral()
}

java {
    sourceCompatibility JavaVersion.VERSION_11
    targetCompatibility JavaVersion.VERSION_11
}


dependencies {
    implementation 'org.seleniumhq.selenium:selenium-java:4.7.2'
    implementation 'org.testng:testng:7.4.0'
    implementation 'io.qameta.allure:allure-testng:2.19.0'
    implementation 'io.rest-assured:rest-assured:5.3.0'
    implementation 'org.awaitility:awaitility:4.2.0'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    implementation 'org.aeonbits.owner:owner:1.0.12'
    implementation 'org.seleniumhq.selenium:selenium-chrome-driver:4.7.2'
    implementation 'org.seleniumhq.selenium:selenium-firefox-driver:4.7.2'
    implementation 'com.amazonaws:aws-java-sdk:1.12.385'
}

pmd {
    consoleOutput = true
    toolVersion = "6.21.0"
    rulesMinimumPriority = 5
    ruleSetConfig = rootProject.resources.text.fromFile("config/pmdRules.xml")
    ruleSets = []
}

checkstyle {
    toolVersion = "8.23"
    configFile = rootProject.file('config/checkstyle.xml')
}


boolean areKeysDefined() {
    return project.hasProperty("accessKey") && project.hasProperty("secretKey")
}

publishing {
    if (areKeysDefined()) {
        repositories {
            maven {
                    url "s3://maven.egeiper"
                    credentials(AwsCredentials) {
                        accessKey = project.getProperty("accessKey")
                        secretKey = project.getProperty("secretKey")
                    }
                    publications {
                        mavenJava(MavenPublication) {
                            artifact file("$projectDir/target/QA-Base-${version}-jar-with-dependencies.jar")
                        }
                    }
                }
            }
        }
    }


test {
    useTestNG()
    maxParallelForks = Runtime.runtime.availableProcessors()
}
